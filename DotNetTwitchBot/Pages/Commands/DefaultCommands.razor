@page "/defaultcommands"
@attribute [Authorize(Roles = "Streamer")]
@inject DotNetTwitchBot.Bot.Commands.ICommandHandler CommandHandler
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

<PageTitle>SPTV Twitch Bot - Default Commands</PageTitle>

@if (defaultCommands == null)
{
    <MudAlert Severity="Severity.Info">Loading...</MudAlert>
}
else
{
    <MudTable Items="@defaultCommands">
        <HeaderContent>
            <MudTh>Configured Name</MudTh>
            <MudTh>Default Name</MudTh>
            <MudTh>Module</MudTh>
            <MudTh>Rank</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Configured Name">!@context.CustomCommandName</MudTd>
            <MudTd DataLabel="Default Name">!@context.CommandName</MudTd>
            <MudTd DataLabel="Module Name">@context.ModuleName</MudTd>
            <MudTd DataLabel="Minimum Rank">@context.MinimumRank</MudTd>
            <MudTd DataLabel="Edit">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="() => Edit(context)">Edit</MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    private List<DotNetTwitchBot.Bot.Models.DefaultCommand>? defaultCommands;
    protected override async Task OnInitializedAsync()
    {
        defaultCommands = await CommandHandler.GetDefaultCommandsFromDb();
    }

    private void Edit(DotNetTwitchBot.Bot.Models.DefaultCommand item)
    {
        navigationManager.NavigateTo($"/defaultcommands/{item.Id}");
    }
}
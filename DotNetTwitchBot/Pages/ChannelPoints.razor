@page "/redeems"
@attribute [Authorize(Roles = "Streamer")]
@inject DotNetTwitchBot.Bot.Commands.ChannelPoints.IChannelPointRedeem CPR

<PageTitle>SPTV Twitch Bot - Channel Points</PageTitle>

<MudContainer>
    <MudGrid>
        <MudItem xs="8">
            <MudPaper Elevation="2" Class="pa-4">
                <MudTable Items="@ChannelPointRedeems">
                    <HeaderContent>
                        <MudTh>Name</MudTh>
                        <MudTh>Command</MudTh>
                        <MudTh>Permission</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>@context.Name</MudTd>
                        <MudTd>@context.Command</MudTd>
                        <MudTd>@context.ElevatedPermission</MudTd>
                        <MudTd DataLabel="Delete">
                            <MudButton Variant="Variant.Filled" Color="Color.Secondary"
                                        @onclick="() => DeleteRedeem(context)">
                                Delete
                            </MudButton>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </MudPaper>
         </MudItem>
        <MudItem xs="4">
            <MudCard>
                <MudPaper Elevation="2" Class="pa-4">
                    <EditForm Model="@ChannelPointRedeem" OnValidSubmit="OnSubmit">
                        <MudTextField Label="Name" Required="true" @bind-Value="ChannelPointRedeem.Name" />
                            <MudTextField Label="Command" Required="true" @bind-Value="ChannelPointRedeem.Command" />
                            <MudSelect @bind-Value="@ChannelPointRedeem.ElevatedPermission" Label="Execute As">
                                @foreach (Rank item in Enum.GetValues(typeof(Rank)))
                            {
                                <MudSelectItem Value="@item">@item</MudSelectItem>
                            }
                        </MudSelect>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary"
                                   Class="ml-auto">
                            Submit
                        </MudButton>
                    </EditForm>
                </MudPaper>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private List<DotNetTwitchBot.Bot.Models.ChannelPointRedeem> ChannelPointRedeems { get; set; } = new();
    private DotNetTwitchBot.Bot.Models.ChannelPointRedeem ChannelPointRedeem { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        ChannelPointRedeems = await CPR.GetRedeems();
        await base.OnInitializedAsync();
    }

    private async Task DeleteRedeem(DotNetTwitchBot.Bot.Models.ChannelPointRedeem redeem)
    {
        await CPR.DeleteRedeem(redeem);
        ChannelPointRedeems = await CPR.GetRedeems();
        StateHasChanged();
    }

    private async Task OnSubmit()
    {
        await CPR.AddRedeem(ChannelPointRedeem);
        ChannelPointRedeems = await CPR.GetRedeems();
        StateHasChanged();
    }
}

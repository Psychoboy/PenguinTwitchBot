@page "/aliases"
@inject DotNetTwitchBot.Bot.Commands.Custom.Alias AliasCommand
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

<PageTitle>Aliases</PageTitle>

<MudButton OnClick="CreateAlias" Variant="Variant.Filled" Color="Color.Primary">Create Alias</MudButton>
@if (aliases == null)
{
    <MudAlert Severity="Severity.Info">Loading...</MudAlert>
}
else
{
    <MudTable Items="@aliases">
        <HeaderContent>
            <MudTh>Alias</MudTh>
            <MudTh>Command</MudTh>
            <MudTh></MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Alias">@context.AliasName</MudTd>
            <MudTd DataLabel="Command">@context.CommandName</MudTd>
            <MudTd DataLabel="Edit">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="() => Edit(context)">Edit</MudButton>
            </MudTd>
            <MudTd DataLabel="Delete">
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="() => Delete(context)">Delete
                </MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    private List<DotNetTwitchBot.Bot.Models.AliasModel>? aliases;
    protected override async Task OnInitializedAsync()
    {
        aliases = await AliasCommand.GetAliasesAsync();
    }

    private void CreateAlias()
    {
        navigationManager.NavigateTo($"/aliases/create");
    }

    private void Edit(DotNetTwitchBot.Bot.Models.AliasModel item)
    {
        navigationManager.NavigateTo($"/aliases/{item.Id}");
    }

    private async Task Delete(DotNetTwitchBot.Bot.Models.AliasModel item)
    {
        await AliasCommand.DeleteAliasAsync(item);
        aliases?.Remove(item);
        StateHasChanged();
    }
}
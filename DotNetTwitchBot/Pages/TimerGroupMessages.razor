@page "/timermessages/{id:int}"
@using Meziantou.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@inject DotNetTwitchBot.Bot.Commands.Misc.Timers Timers
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
<PageTitle>Timer Group Edit</PageTitle>
<style type="text/css">
    .white-text {
        color: white;

    }
</style>
@if (timerGroup == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table white-text">
        <thead>
            <tr>
                <th>Message</th>
                <th>Enabled</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in timerGroup.Messages)
            {
                <tr>
                    <td>@item.Message</td>
                    <td>@item.Enabled</td>
                    <td><button class="btn btn-primary btn-xs" @onclick="() => Toggle(item)">Toggle</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        <input placeholder="Message" @bind="Message" />
        <button class="btn btn-primary" @onclick="AddMessage">Add Message</button>
    </div>
    <hr />
    <div>
        <EditForm Model="timerGroup" OnSubmit="OnEdit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div>
                <InputText @bind-Value=@timerGroup.Name />
            </div>
            <div>
                <label>Minimum Interval</label>
                <InputNumber @bind-Value=@timerGroup.IntervalMinimum />
            </div>
            <div>
                <label>Maximum Interval</label>
                <InputNumber @bind-Value=@timerGroup.IntervalMaximum />
            </div>
            <div>
                <label>Minimum Messages</label>
                <InputNumber @bind-Value=@timerGroup.MinimumMessages />
            </div>
            <div>
                <label>Enabled</label>
                <InputCheckbox @bind-Value=@timerGroup.Active />
            </div>
            <button type="submit">Submit</button>
        </EditForm>
    </div>
}
@code
{
    [Parameter]
    public int id { get; set; }

    private string? Message;
    private DotNetTwitchBot.Bot.Models.Timers.TimerGroup? timerGroup;
    protected override async void OnParametersSet()
    {
        timerGroup = await Timers.GetTimerGroupAsync(id);
        StateHasChanged();
    }

    private async Task Toggle(DotNetTwitchBot.Bot.Models.Timers.TimerMessage message)
    {
        message.Enabled = !message.Enabled;
        await Timers.UpdateTimerMessage(message);
        timerGroup = await Timers.GetTimerGroupAsync(id);
        StateHasChanged();
    }

    private async Task AddMessage()
    {
        if (timerGroup != null && string.IsNullOrWhiteSpace(Message) == false)
        {
            var message = new DotNetTwitchBot.Bot.Models.Timers.TimerMessage
                {
                    Message = Message,
                    Enabled = true
                };
            timerGroup.Messages.Add(message);
            await Timers.UpdateTimerGroup(timerGroup);
            StateHasChanged();
        }
    }
    public async void OnEdit()
    {
        if (timerGroup == null) return;
        await Timers.UpdateTimerGroup(timerGroup);
        StateHasChanged();
    }
}
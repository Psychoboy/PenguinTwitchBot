@page "/knownbots"
@using DotNetTwitchBot.Bot.Models;
@inject DotNetTwitchBot.Bot.Commands.Moderation.IKnownBots KnownBotsApi
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

<PageTitle>Known Bots</PageTitle>
<style type="text/css">
    .white-text {
        color: white;

    }
</style>
@if (knownBots == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table white-text">
        <thead>
            <tr>
                <th>Name</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var knownBot in knownBots)
            {
                <tr>
                    <td>@knownBot.Username</td>
                    <td><button class="btn btn-primary btn-xs" @onclick="() => Delete(knownBot)">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>

    <button class="btn btn-primary" @onclick="() => CreateFilter()">Add Known Bot</button>
}

@code {
    private List<KnownBot>? knownBots;

    protected override Task OnInitializedAsync()
    {
        knownBots = KnownBotsApi.GetKnownBots();
        return Task.CompletedTask;
    }

    public async Task Delete(KnownBot item)
    {
        await KnownBotsApi.RemoveKnownBot(item);
        knownBots = KnownBotsApi.GetKnownBots();
        StateHasChanged();
    }

    public void CreateFilter()
    {
        navigationManager.NavigateTo($"/createknownbot");
    }
}
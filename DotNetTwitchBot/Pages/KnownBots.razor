@page "/knownbots"
@using DotNetTwitchBot.Bot.Models;
@inject DotNetTwitchBot.Bot.Commands.Moderation.IKnownBots KnownBotsApi
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

<PageTitle>Known Bots</PageTitle>

<MudButton OnClick="CreateFilter" Variant="Variant.Filled" Color="Color.Primary">Add Known Bot</MudButton>

@if (knownBots != null)
{
    <MudTable Items="@knownBots">
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh></MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Username</MudTd>
            <MudTd DataLabel="Delete">
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="() => Delete(context)">Delete
                </MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    private List<KnownBot>? knownBots;

    protected override Task OnInitializedAsync()
    {
        knownBots = KnownBotsApi.GetKnownBots();
        return Task.CompletedTask;
    }

    public async Task Delete(KnownBot item)
    {
        await KnownBotsApi.RemoveKnownBot(item);
        knownBots = KnownBotsApi.GetKnownBots();
        StateHasChanged();
    }

    public void CreateFilter()
    {
        navigationManager.NavigateTo($"/createknownbot");
    }
}
// <auto-generated />
using System;
using DotNetTwitchBot.Bot.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetTwitchBot.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230316181645_addDisabledForCommands")]
    partial class addDisabledForCommands
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DotNetTwitchBot.Bot.Models.Counter", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CounterName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CounterName");

                    b.ToTable("Counters");
                });

            modelBuilder.Entity("DotNetTwitchBot.Bot.Models.CustomCommands", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommandName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<bool>("Disabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("GlobalCooldown")
                        .HasColumnType("int");

                    b.Property<int>("MinimumRank")
                        .HasColumnType("int");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserCooldown")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommandName");

                    b.ToTable("CustomCommands");
                });

            modelBuilder.Entity("DotNetTwitchBot.Bot.Models.Follower", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FollowDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("DotNetTwitchBot.Bot.Models.GiveawayEntry", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("GiveawayEntries");
                });

            modelBuilder.Entity("DotNetTwitchBot.Bot.Models.Viewer", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("isBroadcaster")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isMod")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isSub")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isVip")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("Viewers");
                });

            modelBuilder.Entity("DotNetTwitchBot.Bot.Models.ViewerTicket", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("ViewerTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
